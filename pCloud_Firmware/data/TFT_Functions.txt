//*******************Display functions************************//
int getRSSIasQuality(int RSSI) {
  int quality = 0;

  if (RSSI <= -100) {
    quality = 0;
  } else if (RSSI >= -50) {
    quality = 100;
  } else {
    quality = 2 * (RSSI + 100);
  }
  return quality;
}

const unsigned char sutawifiBitmap [] PROGMEM = { // wifi 100%
  // 'wifisuta, 27x15px
  0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0,
  0x00, 0x00, 0xe3, 0xc0, 0x00, 0x01, 0xe3, 0xc0, 0x00, 0x01, 0xe3, 0xc0, 0x00, 0x61, 0xe3, 0xc0,
  0x00, 0xf1, 0xe3, 0xc0, 0x00, 0xf1, 0xe3, 0xc0, 0x30, 0xf1, 0xe3, 0xc0, 0x78, 0xf1, 0xe3, 0xc0,
  0x78, 0xf1, 0xe3, 0xc0, 0x78, 0xf1, 0xe3, 0xc0, 0x30, 0x60, 0xc1, 0x80
};


const unsigned char saptewifiBitmap [] PROGMEM = { // wifi 75%
  // 'wifisapte, 27x15px
  0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40,
  0x00, 0x00, 0xe2, 0x40, 0x00, 0x01, 0xe2, 0x40, 0x00, 0x01, 0xe2, 0x40, 0x00, 0x61, 0xe2, 0x40,
  0x00, 0xf1, 0xe2, 0x40, 0x00, 0xf1, 0xe2, 0x40, 0x30, 0xf1, 0xe2, 0x40, 0x78, 0xf1, 0xe2, 0x40,
  0x78, 0xf1, 0xe2, 0x40, 0x78, 0xf1, 0xe3, 0xc0, 0x30, 0x60, 0xc1, 0x80
};

const unsigned char cinciwifiBitmap [] PROGMEM = {  // wifi 50%
  // 'wificinci, 27x15px
  0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40,
  0x00, 0x00, 0xe2, 0x40, 0x00, 0x01, 0x22, 0x40, 0x00, 0x01, 0x22, 0x40, 0x00, 0x61, 0x22, 0x40,
  0x00, 0xf1, 0x22, 0x40, 0x00, 0xf1, 0x22, 0x40, 0x30, 0xf1, 0x22, 0x40, 0x78, 0xf1, 0x22, 0x40,
  0x78, 0xf1, 0x22, 0x40, 0x78, 0xf1, 0xe3, 0xc0, 0x30, 0x60, 0xc1, 0x80
};

const unsigned char doiwifiBitmap [] PROGMEM = {  // wifi 25%
  // 'wifidoi, 27x15px
  0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40,
  0x00, 0x00, 0xe2, 0x40, 0x00, 0x01, 0x22, 0x40, 0x00, 0x01, 0x22, 0x40, 0x00, 0x61, 0x22, 0x40,
  0x00, 0xf1, 0x22, 0x40, 0x00, 0x91, 0x22, 0x40, 0x30, 0x91, 0x22, 0x40, 0x78, 0x91, 0x22, 0x40,
  0x78, 0x91, 0x22, 0x40, 0x78, 0xf1, 0xe3, 0xc0, 0x30, 0x60, 0xc1, 0x80
};

const unsigned char nowifiBitmap [] PROGMEM = {  //wifi neconectat
  // 'nowifi, 27x15px
  0x00, 0x00, 0x01, 0x80, 0x63, 0x00, 0x03, 0xc0, 0x7f, 0x00, 0x02, 0x40, 0x3e, 0x00, 0x02, 0x40,
  0x3e, 0x00, 0xe2, 0x40, 0x3e, 0x01, 0x22, 0x40, 0x7f, 0x01, 0x22, 0x40, 0x63, 0x61, 0x22, 0x40,
  0x00, 0xf1, 0x22, 0x40, 0x00, 0x91, 0x22, 0x40, 0x00, 0x91, 0x22, 0x40, 0x78, 0x91, 0x22, 0x40,
  0x48, 0x91, 0x22, 0x40, 0x78, 0xf1, 0xe3, 0xc0, 0x30, 0x60, 0xc1, 0x80
};

const unsigned char fullbattBitmap [] PROGMEM = {   // batt 100%
  // 'fullbatt, 35x15px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf8, 0x00, 0x08, 0x00, 0x00, 0x04, 0x00, 0x17,
  0x9f, 0x3e, 0x7a, 0x00, 0x2f, 0x9f, 0x3e, 0x7d, 0x00, 0x2f, 0x9f, 0x3e, 0x7d, 0x80, 0x2f, 0x9f,
  0x3e, 0x7d, 0xc0, 0x2f, 0x9f, 0x3e, 0x7d, 0x40, 0x2f, 0x9f, 0x3e, 0x7d, 0xc0, 0x2f, 0x9f, 0x3e,
  0x7d, 0x80, 0x2f, 0x9f, 0x3e, 0x7d, 0x00, 0x17, 0x9f, 0x3e, 0x7a, 0x00, 0x08, 0x00, 0x00, 0x04,
  0x00, 0x07, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char saptebattBitmap [] PROGMEM = { //batt 75%
  // 'saptebatt, 35x15px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf8, 0x00, 0x08, 0x00, 0x00, 0x04, 0x00, 0x17,
  0x9f, 0x3e, 0x02, 0x00, 0x2f, 0x9f, 0x3e, 0x01, 0x00, 0x2f, 0x9f, 0x3e, 0x01, 0x80, 0x2f, 0x9f,
  0x3e, 0x01, 0xc0, 0x2f, 0x9f, 0x3e, 0x01, 0x40, 0x2f, 0x9f, 0x3e, 0x01, 0xc0, 0x2f, 0x9f, 0x3e,
  0x01, 0x80, 0x2f, 0x9f, 0x3e, 0x01, 0x00, 0x17, 0x9f, 0x3e, 0x02, 0x00, 0x08, 0x00, 0x00, 0x04,
  0x00, 0x07, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char cincibattBitmap [] PROGMEM = { //batt 50%
  // 'cincibatt, 35x15px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf8, 0x00, 0x08, 0x00, 0x00, 0x04, 0x00, 0x17,
  0x9f, 0x00, 0x02, 0x00, 0x2f, 0x9f, 0x00, 0x01, 0x00, 0x2f, 0x9f, 0x00, 0x01, 0x80, 0x2f, 0x9f,
  0x00, 0x01, 0xc0, 0x2f, 0x9f, 0x00, 0x01, 0x40, 0x2f, 0x9f, 0x00, 0x01, 0xc0, 0x2f, 0x9f, 0x00,
  0x01, 0x80, 0x2f, 0x9f, 0x00, 0x01, 0x00, 0x17, 0x9f, 0x00, 0x02, 0x00, 0x08, 0x00, 0x00, 0x04,
  0x00, 0x07, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char doibattBitmap [] PROGMEM = { //bat 25%
  // 'doibatt, 35x15px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf8, 0x00, 0x08, 0x00, 0x00, 0x04, 0x00, 0x17,
  0x80, 0x00, 0x02, 0x00, 0x2f, 0x80, 0x00, 0x01, 0x00, 0x2f, 0x80, 0x00, 0x01, 0x80, 0x2f, 0x80,
  0x00, 0x01, 0xc0, 0x2f, 0x80, 0x00, 0x01, 0x40, 0x2f, 0x80, 0x00, 0x01, 0xc0, 0x2f, 0x80, 0x00,
  0x01, 0x80, 0x2f, 0x80, 0x00, 0x01, 0x00, 0x17, 0x80, 0x00, 0x02, 0x00, 0x08, 0x00, 0x00, 0x04,
  0x00, 0x07, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char nobattBitmap [] PROGMEM = {  //batt <10%
  // 'nobatt, 35x15px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf8, 0x00, 0x08, 0x00, 0x00, 0x04, 0x00, 0x10,
  0x00, 0x00, 0x02, 0x00, 0x20, 0x00, 0x00, 0x01, 0x00, 0x20, 0x00, 0x00, 0x01, 0x80, 0x20, 0x00,
  0x00, 0x01, 0xc0, 0x20, 0x00, 0x00, 0x01, 0x40, 0x20, 0x00, 0x00, 0x01, 0xc0, 0x20, 0x00, 0x00,
  0x01, 0x80, 0x20, 0x00, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x02, 0x00, 0x08, 0x00, 0x00, 0x04,
  0x00, 0x07, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char nobattBitmap2 [] PROGMEM = {
  // 'nobatt, 104x45px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
  0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x04, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x08,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xe0, 0x08, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0xf0, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0xf8, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x23, 0xf8, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23,
  0xf8, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0xf8, 0x08, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0xf8, 0x08, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0xf8, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x23, 0xf8, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x23, 0xf8, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0xf8, 0x08,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0xf0, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xe0, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x08, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char doibattBitmap2 [] PROGMEM = {
  // 'doibatt, 104x45px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f,
  0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char cincibattBitmap2 [] PROGMEM = {
  // 'cincibatt, 104x45px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7f, 0xff, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03,
  0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff,
  0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f,
  0xff, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff,
  0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7f, 0xff, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03,
  0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff,
  0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char saptebattBitmap2 [] PROGMEM = {
  // 'saptebatt, 104x45px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03,
  0xff, 0xf8, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f,
  0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff,
  0x03, 0xff, 0xf8, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8,
  0x1f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f,
  0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff,
  0xf8, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03,
  0xff, 0xf8, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f,
  0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff,
  0x03, 0xff, 0xf8, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8,
  0x1f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char sutabattBitmap2 [] PROGMEM = {
  // 'sutabatt, 104x45px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x81, 0xff, 0xf8,
  0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x81, 0xff, 0xfc, 0x00, 0x00, 0x00,
  0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x81, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03,
  0xff, 0xf8, 0x1f, 0xff, 0x81, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f,
  0xff, 0x81, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x81, 0xff,
  0xfc, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x81, 0xff, 0xfc, 0x00, 0x00,
  0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x81, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x7f, 0xff,
  0x03, 0xff, 0xf8, 0x1f, 0xff, 0x81, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8,
  0x1f, 0xff, 0x81, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x81,
  0xff, 0xfc, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x81, 0xff, 0xfc, 0x00,
  0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x81, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x7f,
  0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x81, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff,
  0xf8, 0x1f, 0xff, 0x81, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff,
  0x81, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x81, 0xff, 0xfc,
  0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x81, 0xff, 0xfc, 0x00, 0x00, 0x00,
  0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x81, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03,
  0xff, 0xf8, 0x1f, 0xff, 0x81, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f,
  0xff, 0x81, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x81, 0xff,
  0xfc, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x81, 0xff, 0xfc, 0x00, 0x00,
  0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x81, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x7f, 0xff,
  0x03, 0xff, 0xf8, 0x1f, 0xff, 0x81, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf8,
  0x1f, 0xff, 0x81, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0x81,
  0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void battery() {

  //tensiune = random(100);
  tft.fillRect(98, 0, 82, 15, ST7735_BLACK);
  if (tensiune < 10) {
    // tft.fillScreen(ST77XX_BLACK);
    tft.drawBitmap(98, 0, nobattBitmap, 35, 15, CULOARE[0]);
    battText(CULOARE[0]);
  }
  if ((tensiune >= 10) && (tensiune < 25)) {
    //  tft.fillScreen(ST77XX_BLACK);
    tft.drawBitmap(98, 0, doibattBitmap, 35, 15, CULOARE[0]);
    battText(CULOARE[0]);
  }
  if ((tensiune >= 25) && (tensiune < 50)) {
    // tft.fillScreen(ST77XX_BLACK);
    tft.drawBitmap(98, 0, cincibattBitmap, 35, 15, CULOARE[0]);
    battText(CULOARE[0]);
  }
  if ((tensiune >= 50) && (tensiune < 75)) {
    // tft.fillScreen(ST77XX_BLACK);
    tft.drawBitmap(98, 0, saptebattBitmap, 35, 15, CULOARE[0]);
    battText(CULOARE[0]);
  }
  if (tensiune >= 75) {
    // tft.fillScreen(ST77XX_BLACK);
    tft.drawBitmap(98, 0, fullbattBitmap, 35, 15, CULOARE[0]);
    battText(CULOARE[0]);
  }
  //delay(1000);
  // tft.fillScreen(ST77XX_BLACK);
};

void battery2() {

  //  tensiune = random(100);
  //  tensiune = 18;
  tensiune = tensiune / 5;
  tensiune = (long)(tensiune * 10) / 10;
  tensiune = tensiune * 5;

  //  tft.fillRect(9, 20, 140, 41, ST7735_BLACK);
  //  tft.fillScreen(ST77XX_BLACK);
  tft.drawBitmap(9, 18, nobattBitmap2, 104, 45, CULOARE[0]);
  tft.fillRect(16, 25, 79, 30, ST7735_BLACK); // (Y,X,L,H)

  if (tensiune < 10) {
    // tft.fillScreen(ST77XX_BLACK);
    tft.drawBitmap(9, 18, nobattBitmap2, 104, 45, CULOARE[0]);
    battText2(CULOARE[0]);
  }
  if ((tensiune >= 10) && (tensiune <= 25)) {
    //  tft.fillScreen(ST77XX_BLACK);
    tft.drawBitmap(9, 18, doibattBitmap2, 104, 45, CULOARE[0]);
    battText2(CULOARE[0]);
  }
  if ((tensiune > 25) && (tensiune <= 50)) {
    // tft.fillScreen(ST77XX_BLACK);
    tft.drawBitmap(9, 18, cincibattBitmap2, 104, 45, CULOARE[0]);
    battText2(CULOARE[0]);
  }
  if ((tensiune > 50) && (tensiune <= 75)) {
    // tft.fillScreen(ST77XX_BLACK);
    tft.drawBitmap(9, 18, saptebattBitmap2, 104, 45, CULOARE[0]);
    battText2(CULOARE[0]);
  }
  if (tensiune > 75) {
    // tft.fillScreen(ST77XX_BLACK);
    tft.drawBitmap(9, 18, sutabattBitmap2, 104, 45, CULOARE[0]);
    battText2(CULOARE[0]);
  }
  // delay(50);
  // tft.fillScreen(ST77XX_BLACK);
  //    tft.fillRect(16, 25, 77, 30, ST7735_RED);  // (Y,X,L,H) -------FOR TEST
};

void wifi() {

  tft.fillRect(1, 0, 27, 15, ST7735_BLACK);

  if (wifistrenght < 10) {
    // tft.fillScreen(ST77XX_BLACK);
    tft.drawBitmap(1, 0, nowifiBitmap, 27, 15, CULOARE[0]);

  }
  if ((wifistrenght >= 10) && (wifistrenght < 25)) {
    // tft.fillScreen(ST77XX_BLACK);
    tft.drawBitmap(1, 0, doiwifiBitmap, 27, 15, CULOARE[0]);

  }
  if ((wifistrenght >= 25) && (wifistrenght < 50)) {
    // tft.fillScreen(ST77XX_BLACK);
    tft.drawBitmap(1, 0, cinciwifiBitmap, 27, 15, CULOARE[0]);

  }
  if ((wifistrenght >= 50) && (wifistrenght < 75)) {
    // tft.fillScreen(ST77XX_BLACK);
    tft.drawBitmap(1, 0, saptewifiBitmap, 27, 15, CULOARE[0]);

  }
  if (wifistrenght >= 75) {
    //  tft.fillScreen(ST77XX_BLACK);
    tft.drawBitmap(1, 0, sutawifiBitmap, 27, 15, CULOARE[0]);

  }
};

void nowifi() {
  tft.drawBitmap(1, 0, nowifiBitmap, 27, 15, CULOARE[0]);
};

void drawText1(char *text, uint16_t color) {
  // tft.setFont(&FreeSans9pt7b); //    tft.fillRect(5, 25, 165, 10, ST7735_BLACK);
  tft.setCursor(5, 25);
  tft.setTextColor(color);
  tft.setTextSize(1);
  tft.setTextWrap(true);
  tft.print(text);
}
void drawText2(char *text, uint16_t color) {

  tft.setCursor(5, 35);
  tft.setTextColor(color);
  tft.setTextSize(1);
  tft.setTextWrap(true);
  tft.print(text);
}
void drawText3(char *text, uint16_t color) {

  tft.setCursor(15, 45);
  tft.setTextColor(color);
  tft.setTextSize(1);
  tft.setTextWrap(true);
  tft.print(text);
}
void drawText4(char *text, uint16_t color) {

  tft.setCursor(20, 55);
  tft.setTextColor(color);
  tft.setTextSize(1);
  tft.setTextWrap(true);
  tft.print(text);
}

void loading() {

  unsigned long currentTime = millis();




  // tft.drawCircle(Y, X, r, culoare);
  tft.fillCircle(65, 70, 3, CULOARE[(l + 5) % 6]);
  tft.fillCircle(75, 70, 3, CULOARE[(l + 4) % 6]);
  tft.fillCircle(85, 70, 3, CULOARE[(l + 3) % 6]);
  tft.fillCircle(95, 70, 3, CULOARE[(l + 2) % 6]);
  tft.fillCircle(105, 70, 3, CULOARE[(l + 1) % 6]);
  tft.fillCircle(55, 70, 3, CULOARE[l % 6]);
  l = l + 1;
  if (l == 7) {
    l = 1;
  }


}

void battText( uint16_t color) {
  // tft.fillRect(135, 4, 35, 15, ST7735_BLACK);
  tft.setCursor(135, 4);
  tft.setTextColor(color);
  tft.setTextSize(1);
  //tft.setTextWrap(true);
  tft.print(tensiune);
  tft.print("%");
}

void battText2( uint16_t color) {
  tft.fillRect(112, 34, 48, 15, ST7735_BLACK);
  tft.setCursor(112, 34);
  tft.setTextColor(color);
  tft.setTextSize(2);
  //tft.setTextWrap(true);
  tft.print(tensiune);
  tft.print("%");
  //tft.fillRect(112, 34, 48, 15, ST7735_RED); // (Y,X,L,H) -------FOR TEST
}
